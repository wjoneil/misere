<%= form_for([@game,@round]) do |f| %>
  <% if @round.errors.any? %>
    <div id="error_explanation">
      <h3><%= pluralize(@round.errors.count, "error") %> stopped this round from being created:</h3>
      <ul>
      <% @round.errors.each do |key, value| %>
        <li><%= value %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <h3>Round <%= @game.rounds.length %></h3>

  <div class="hidden_fields">
    <%= f.hidden_field(:number, :value => "#{@game.rounds.length}") %>
    <%= f.hidden_field(:bid_value, :value => "0") %>
    <%= f.hidden_field(:bid_suit, :value => "") %>
    <%= f.hidden_field(:bid_team_id, :value => "") %>
  </div>

  <%= render 'score_table' %>

  <div id="bid_notice"><p><em>Please select a bid.</em></p></div>

  <table class="fields">
    <tbody>
      <tr>
        <td class="label"><%= f.label :bid_player_id, "Bidding player" %></td>
        <td><%= collection_select(:round, :bid_player_id, @game.players.all, :id, :name) %></td>
      </tr>
      <tr>
        <td class="label"><%= f.label :bidding_team_won_round %></td>
        <td><%= f.check_box :bidding_team_won_round %></td>
      </tr>
      <% tricks_array = 0.upto(10).map { |number| ["#{number}", number]} %>
      <tr>
        <td class="label"><%= f.label :tricks_won_by_other_team %></td>
        <td><%= f.select(:tricks_won_by_other_team, options_for_select(tricks_array)) %></td>
      </tr>
      <tr class="actions">
        <td colspan="2"><%= f.submit %></td>
      </tr>
    </tbody>
  </table>

<% end %>

<script>
  $(function() {

    $("#round_bid_player_id").on("change", function() {
      var team_lookup = <%= raw @game.get_player_team_lookup.to_json %>;
      $("#round_bid_team_id").val(team_lookup[$(this).val()]);

    });

    $("#round_bid_player_id").change();

    $("#score_table").on("click", "td", function() {
      var $this = $(this), bidsuit, bidvalue, bidstring;
      bidsuit = $this.data('suit').replace(/_/g, " ");
      bidvalue = $this.parent().data('bidvalue');
      bidstring = bidvalue + " " + bidsuit;

      $("#round_bid_suit").val(bidsuit);
      $("#round_bid_value").val(bidvalue);

      $("#score_table td").removeClass("active");
      $this.addClass("active");

      updateBidInfoClick(bidvalue, bidsuit);

    });

  });

  function handleMisereForDisplayingBidInfo(bidvalue, bidsuit) {
    var bidstring;

    if (bidvalue === 0) {
      bidstring = bidsuit.replace("ere", "Ã¨re");
    } else {
      bidstring = bidvalue + " " + bidsuit;
    }

    return bidstring;
  }

  function updateBidInfoClick(bidvalue, bidsuit) {
    $.ajax({
      url: "/scores/lookup.json",
      data: { suit: bidsuit, value: bidvalue },
      dataType: "json",
      success: function(data, textStatus, jqXHR) {
        var bidstring = handleMisereForDisplayingBidInfo(bidvalue, bidsuit);
        $('#bid_notice p').html("A bid of <em>" + bidstring + "</em> is worth <em>" + data.score + " points</em>.");
      },
      error: function() {
        $('#bid_notice p').html("<span class=\"error\">Couldn't retrieve score - check server</span>");
      }
    });
  }


</script>
